version: '3'

services:

  tt-nginx:
    image: nginx:latest
    ports:
      - 80:80
    networks:
      - tt-network
    volumes:
      - ./task-tracker-frontend:/var/www:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

  tt-postgres:
    container_name: tt-postgres
    image: postgres:14-alpine
    volumes:
      - .volumes/postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres-db
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5432:5432
    networks:
      - tt-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - tt-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - tt-network

volumes:
  tt-postgres_data:
    driver: local

networks:
  tt-network:
    driver: bridge


